{"ast":null,"code":"import { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { isDevMode, SecurityContext, Injectable, Optional, Inject, Directive, Input, NgModule } from '@angular/core';\nimport { generate } from '@ant-design/colors';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, of, Observable } from 'rxjs';\nimport { map, tap, finalize, catchError, share, filter, take } from 'rxjs/operators';\nimport * as i2 from '@angular/platform-browser';\nconst ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\n\nfunction error(message) {\n  console.error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n}\n\nfunction warn(message) {\n  if (isDevMode()) {\n    console.warn(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n  }\n}\n\nfunction getSecondaryColor(primaryColor) {\n  return generate(primaryColor)[0];\n}\n\nfunction withSuffix(name, theme) {\n  switch (theme) {\n    case 'fill':\n      return `${name}-fill`;\n\n    case 'outline':\n      return `${name}-o`;\n\n    case 'twotone':\n      return `${name}-twotone`;\n\n    case undefined:\n      return name;\n\n    default:\n      throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Theme \"${theme}\" is not a recognized theme!`);\n  }\n}\n\nfunction withSuffixAndColor(name, theme, pri, sec) {\n  return `${withSuffix(name, theme)}-${pri}-${sec}`;\n}\n\nfunction mapAbbrToTheme(abbr) {\n  return abbr === 'o' ? 'outline' : abbr;\n}\n\nfunction alreadyHasAThemeSuffix(name) {\n  return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\n\nfunction isIconDefinition(target) {\n  return typeof target === 'object' && typeof target.name === 'string' && (typeof target.theme === 'string' || target.theme === undefined) && typeof target.icon === 'string';\n}\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\n\n\nfunction getIconDefinitionFromAbbr(str) {\n  const arr = str.split('-');\n  const theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n  const name = arr.join('-');\n  return {\n    name,\n    theme,\n    icon: ''\n  };\n}\n\nfunction cloneSVG(svg) {\n  return svg.cloneNode(true);\n}\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\n\n\nfunction replaceFillColor(raw) {\n  return raw.replace(/['\"]#333['\"]/g, '\"primaryColor\"').replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"').replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"').replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\n\n\nfunction getNameAndNamespace(type) {\n  const split = type.split(':');\n\n  switch (split.length) {\n    case 1:\n      return [type, ''];\n\n    case 2:\n      return [split[1], split[0]];\n\n    default:\n      throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The icon type ${type} is not valid!`);\n  }\n}\n\nfunction hasNamespace(type) {\n  return getNameAndNamespace(type)[1] !== '';\n}\n\nfunction NameSpaceIsNotSpecifyError() {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Type should have a namespace. Try \"namespace:${name}\".`);\n}\n\nfunction IconNotFoundError(icon) {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}the icon ${icon} does not exist or is not registered.`);\n}\n\nfunction HttpModuleNotImport() {\n  error(`you need to import \"HttpClientModule\" to use dynamic importing.`);\n  return null;\n}\n\nfunction UrlNotSafeError(url) {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The url \"${url}\" is unsafe.`);\n}\n\nfunction SVGTagNotFoundError() {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}<svg> tag not found.`);\n}\n\nfunction DynamicLoadingTimeoutError() {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Importing timeout error.`);\n}\n\nconst JSONP_HANDLER_NAME = '__ant_icon_load';\n\nclass IconService {\n  constructor(_rendererFactory, _handler, // tslint:disable-next-line:no-any\n  _document, sanitizer) {\n    this._rendererFactory = _rendererFactory;\n    this._handler = _handler;\n    this._document = _document;\n    this.sanitizer = sanitizer;\n    this.defaultTheme = 'outline';\n    /**\n     * All icon definitions would be registered here.\n     */\n\n    this._svgDefinitions = new Map();\n    /**\n     * Cache all rendered icons. Icons are identified by name, theme,\n     * and for twotone icons, primary color and secondary color.\n     */\n\n    this._svgRenderedDefinitions = new Map();\n    this._inProgressFetches = new Map();\n    /**\n     * Url prefix for fetching inline SVG by dynamic importing.\n     */\n\n    this._assetsUrlRoot = '';\n    this._twoToneColorPalette = {\n      primaryColor: '#333333',\n      secondaryColor: '#E6E6E6'\n    };\n    /** A flag indicates whether jsonp loading is enabled. */\n\n    this._enableJsonpLoading = false;\n    this._jsonpIconLoad$ = new Subject();\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n\n    if (this._handler) {\n      this._http = new HttpClient(this._handler);\n    }\n  }\n\n  set twoToneColor({\n    primaryColor,\n    secondaryColor\n  }) {\n    this._twoToneColorPalette.primaryColor = primaryColor;\n    this._twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  }\n\n  get twoToneColor() {\n    // Make a copy to avoid unexpected changes.\n    return Object.assign({}, this._twoToneColorPalette);\n  }\n  /**\n   * Call this method to switch to jsonp like loading.\n   */\n\n\n  useJsonpLoading() {\n    if (!this._enableJsonpLoading) {\n      this._enableJsonpLoading = true;\n\n      window[JSONP_HANDLER_NAME] = icon => {\n        this._jsonpIconLoad$.next(icon);\n      };\n    } else {\n      warn('You are already using jsonp loading.');\n    }\n  }\n  /**\n   * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n   * @param prefix\n   */\n\n\n  changeAssetsSource(prefix) {\n    this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n  }\n  /**\n   * Add icons provided by ant design.\n   * @param icons\n   */\n\n\n  addIcon(...icons) {\n    icons.forEach(icon => {\n      this._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  }\n  /**\n   * Register an icon. Namespace is required.\n   * @param type\n   * @param literal\n   */\n\n\n  addIconLiteral(type, literal) {\n    const [_, namespace] = getNameAndNamespace(type);\n\n    if (!namespace) {\n      throw NameSpaceIsNotSpecifyError();\n    }\n\n    this.addIcon({\n      name: type,\n      icon: literal\n    });\n  }\n  /**\n   * Remove all cache.\n   */\n\n\n  clear() {\n    this._svgDefinitions.clear();\n\n    this._svgRenderedDefinitions.clear();\n  }\n  /**\n   * Get a rendered `SVGElement`.\n   * @param icon\n   * @param twoToneColor\n   */\n\n\n  getRenderedContent(icon, twoToneColor) {\n    // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n    const definitionOrNull = isIconDefinition(icon) ? icon : this._svgDefinitions.get(icon) || null; // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n    // Otherwise try to fetch it from remote.\n\n    const $iconDefinition = definitionOrNull ? of(definitionOrNull) : this._loadIconDynamically(icon); // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n\n    return $iconDefinition.pipe(map(i => {\n      if (!i) {\n        throw IconNotFoundError(icon);\n      }\n\n      return this._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n    }));\n  }\n\n  getCachedIcons() {\n    return this._svgDefinitions;\n  }\n  /**\n   * Get raw svg and assemble a `IconDefinition` object.\n   * @param type\n   */\n\n\n  _loadIconDynamically(type) {\n    // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n    if (!this._http && !this._enableJsonpLoading) {\n      return of(HttpModuleNotImport());\n    } // If multi directive ask for the same icon at the same time,\n    // request should only be fired once.\n\n\n    let inProgress = this._inProgressFetches.get(type);\n\n    if (!inProgress) {\n      const [name, namespace] = getNameAndNamespace(type); // If the string has a namespace within, create a simple `IconDefinition`.\n\n      const icon = namespace ? {\n        name: type,\n        icon: ''\n      } : getIconDefinitionFromAbbr(name);\n      const suffix = this._enableJsonpLoading ? '.js' : '.svg';\n      const url = (namespace ? `${this._assetsUrlRoot}assets/${namespace}/${name}` : `${this._assetsUrlRoot}assets/${icon.theme}/${icon.name}`) + suffix;\n      const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n\n      if (!safeUrl) {\n        throw UrlNotSafeError(url);\n      }\n\n      const source = !this._enableJsonpLoading ? this._http.get(safeUrl, {\n        responseType: 'text'\n      }).pipe(map(literal => Object.assign(Object.assign({}, icon), {\n        icon: literal\n      }))) : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n      inProgress = source.pipe(tap(definition => this.addIcon(definition)), finalize(() => this._inProgressFetches.delete(type)), catchError(() => of(null)), share());\n\n      this._inProgressFetches.set(type, inProgress);\n    }\n\n    return inProgress;\n  }\n\n  _loadIconDynamicallyWithJsonp(icon, url) {\n    return new Observable(subscriber => {\n      const loader = this._document.createElement('script');\n\n      const timer = setTimeout(() => {\n        clean();\n        subscriber.error(DynamicLoadingTimeoutError());\n      }, 6000);\n      loader.src = url;\n\n      function clean() {\n        loader.parentNode.removeChild(loader);\n        clearTimeout(timer);\n      }\n\n      this._document.body.appendChild(loader);\n\n      this._jsonpIconLoad$.pipe(filter(i => i.name === icon.name && i.theme === icon.theme), take(1)).subscribe(i => {\n        subscriber.next(i);\n        clean();\n      });\n    });\n  }\n  /**\n   * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n   * @param icon\n   * @param twoToneColor\n   */\n\n\n  _loadSVGFromCacheOrCreateNew(icon, twoToneColor) {\n    let svg;\n    const pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n\n    const sec = getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n\n    const key = icon.theme === 'twotone' ? withSuffixAndColor(icon.name, icon.theme, pri, sec) : icon.theme === undefined ? icon.name : withSuffix(icon.name, icon.theme); // Try to make a copy from cache.\n\n    const cached = this._svgRenderedDefinitions.get(key);\n\n    if (cached) {\n      svg = cached.icon;\n    } else {\n      svg = this._setSVGAttribute(this._colorizeSVGIcon( // Icons provided by ant design should be refined to remove preset colors.\n      this._createSVGElementFromString(hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)), icon.theme === 'twotone', pri, sec)); // Cache it.\n\n      this._svgRenderedDefinitions.set(key, Object.assign(Object.assign({}, icon), {\n        icon: svg\n      }));\n    }\n\n    return cloneSVG(svg);\n  }\n\n  _createSVGElementFromString(str) {\n    const div = this._document.createElement('div');\n\n    div.innerHTML = str;\n    const svg = div.querySelector('svg');\n\n    if (!svg) {\n      throw SVGTagNotFoundError;\n    }\n\n    return svg;\n  }\n\n  _setSVGAttribute(svg) {\n    this._renderer.setAttribute(svg, 'width', '1em');\n\n    this._renderer.setAttribute(svg, 'height', '1em');\n\n    return svg;\n  }\n\n  _colorizeSVGIcon(svg, twotone, pri, sec) {\n    if (twotone) {\n      const children = svg.childNodes;\n      const length = children.length;\n\n      for (let i = 0; i < length; i++) {\n        const child = children[i];\n\n        if (child.getAttribute('fill') === 'secondaryColor') {\n          this._renderer.setAttribute(child, 'fill', sec);\n        } else {\n          this._renderer.setAttribute(child, 'fill', pri);\n        }\n      }\n    }\n\n    this._renderer.setAttribute(svg, 'fill', 'currentColor');\n\n    return svg;\n  }\n\n}\n\nIconService.ɵfac = function IconService_Factory(t) {\n  return new (t || IconService)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.HttpBackend, 8), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(i2.DomSanitizer));\n};\n\nIconService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: IconService,\n  factory: IconService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.RendererFactory2\n    }, {\n      type: i1.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i2.DomSanitizer\n    }];\n  }, null);\n})();\n\nfunction checkMeta(prev, after) {\n  return prev.type === after.type && prev.theme === after.theme && prev.twoToneColor === after.twoToneColor;\n}\n\nclass IconDirective {\n  constructor(_iconService, _elementRef, _renderer) {\n    this._iconService = _iconService;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.type || changes.theme || changes.twoToneColor) {\n      this._changeIcon();\n    }\n  }\n  /**\n   * Render a new icon in the current element. Remove the icon when `type` is falsy.\n   */\n\n\n  _changeIcon() {\n    return new Promise(resolve => {\n      if (!this.type) {\n        this._clearSVGElement();\n\n        resolve(null);\n      } else {\n        const preMeta = this._getSelfRenderMeta();\n\n        this._iconService.getRenderedContent(this._parseIconType(this.type, this.theme), this.twoToneColor).subscribe(svg => {\n          // avoid race condition, see https://github.com/ant-design/ant-design-icons/issues/315\n          if (checkMeta(preMeta, this._getSelfRenderMeta())) {\n            this._setSVGElement(svg);\n\n            resolve(svg);\n          } else {\n            resolve(null);\n          }\n        });\n      }\n    });\n  }\n\n  _getSelfRenderMeta() {\n    return {\n      type: this.type,\n      theme: this.theme,\n      twoToneColor: this.twoToneColor\n    };\n  }\n  /**\n   * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n   * If namespace is specified, ignore theme because it meaningless for users' icons.\n   *\n   * @param type\n   * @param theme\n   */\n\n\n  _parseIconType(type, theme) {\n    if (isIconDefinition(type)) {\n      return type;\n    } else {\n      const [name, namespace] = getNameAndNamespace(type);\n\n      if (namespace) {\n        return type;\n      }\n\n      if (alreadyHasAThemeSuffix(name)) {\n        if (!!theme) {\n          warn(`'type' ${name} already gets a theme inside so 'theme' ${theme} would be ignored`);\n        }\n\n        return name;\n      } else {\n        return withSuffix(name, theme || this._iconService.defaultTheme);\n      }\n    }\n  }\n\n  _setSVGElement(svg) {\n    this._clearSVGElement();\n\n    this._renderer.appendChild(this._elementRef.nativeElement, svg);\n  }\n\n  _clearSVGElement() {\n    var _a;\n\n    const el = this._elementRef.nativeElement;\n    const children = el.childNodes;\n    const length = children.length;\n\n    for (let i = length - 1; i >= 0; i--) {\n      const child = children[i];\n\n      if (((_a = child.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'svg') {\n        this._renderer.removeChild(el, child);\n      }\n    }\n  }\n\n}\n\nIconDirective.ɵfac = function IconDirective_Factory(t) {\n  return new (t || IconDirective)(i0.ɵɵdirectiveInject(IconService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IconDirective,\n  selectors: [[\"\", \"antIcon\", \"\"]],\n  inputs: {\n    type: \"type\",\n    theme: \"theme\",\n    twoToneColor: \"twoToneColor\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[antIcon]'\n    }]\n  }], function () {\n    return [{\n      type: IconService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    twoToneColor: [{\n      type: Input\n    }]\n  });\n})();\n\nclass IconModule {}\n\nIconModule.ɵfac = function IconModule_Factory(t) {\n  return new (t || IconModule)();\n};\n\nIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: IconModule\n});\nIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [IconService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [IconDirective],\n      declarations: [IconDirective],\n      providers: [IconService]\n    }]\n  }], null, null);\n})();\n\nconst manifest = {\n  fill: ['account-book', 'alipay-circle', 'aliwangwang', 'amazon-circle', 'amazon-square', 'android', 'api', 'alipay-square', 'apple', 'alert', 'audio', 'backward', 'bank', 'behance-square', 'behance-circle', 'bell', 'book', 'box-plot', 'bug', 'build', 'appstore', 'calculator', 'bulb', 'camera', 'calendar', 'car', 'caret-down', 'caret-left', 'caret-up', 'caret-right', 'carry-out', 'check-square', 'ci-circle', 'chrome', 'close-circle', 'check-circle', 'close-square', 'clock-circle', 'code-sandbox-circle', 'code-sandbox-square', 'codepen-circle', 'codepen-square', 'compass', 'contacts', 'container', 'control', 'copy', 'code', 'copyright-circle', 'credit-card', 'customer-service', 'database', 'dashboard', 'delete', 'cloud', 'dingtalk-circle', 'diff', 'dislike', 'down-square', 'dribbble-square', 'dribbble-circle', 'dropbox-circle', 'dropbox-square', 'edit', 'dollar-circle', 'environment', 'euro-circle', 'exclamation-circle', 'experiment', 'dingtalk-square', 'crown', 'eye', 'eye-invisible', 'facebook', 'fast-backward', 'fast-forward', 'file-add', 'file-exclamation', 'file', 'down-circle', 'file-image', 'file-markdown', 'file-pdf', 'file-ppt', 'file-excel', 'file-word', 'file-text', 'file-zip', 'filter', 'fire', 'file-unknown', 'folder', 'folder-open', 'flag', 'frown', 'fund', 'format-painter', 'forward', 'funnel-plot', 'folder-add', 'gold', 'gitlab', 'github', 'gift', 'google-square', 'google-plus-circle', 'google-plus-square', 'highlight', 'heart', 'home', 'hdd', 'hourglass', 'idcard', 'ie-circle', 'info-circle', 'google-circle', 'html5', 'golden', 'interaction', 'layout', 'ie-square', 'left-circle', 'left-square', 'like', 'insurance', 'linkedin', 'lock', 'mail', 'instagram', 'medicine-box', 'medium-square', 'meh', 'medium-circle', 'message', 'minus-circle', 'minus-square', 'mobile', 'mac-command', 'money-collect', 'notification', 'pause-circle', 'phone', 'picture', 'pie-chart', 'play-circle', 'play-square', 'pound-circle', 'plus-circle', 'printer', 'profile', 'pushpin', 'property-safety', 'qq-circle', 'project', 'question-circle', 'qq-square', 'plus-square', 'read', 'pay-circle', 'reddit-circle', 'red-envelope', 'reddit-square', 'right-square', 'right-circle', 'rest', 'robot', 'rocket', 'save', 'safety-certificate', 'security-scan', 'schedule', 'setting', 'shopping', 'sketch-circle', 'signal', 'skin', 'skype', 'sketch-square', 'slack-square', 'sliders', 'slack-circle', 'shop', 'snippets', 'sound', 'star', 'reconciliation', 'smile', 'stop', 'switcher', 'step-backward', 'tag', 'step-forward', 'tags', 'tablet', 'taobao-circle', 'taobao-square', 'trademark-circle', 'trophy', 'thunderbolt', 'twitter-circle', 'unlock', 'twitter-square', 'tool', 'video-camera', 'up-square', 'up-circle', 'usb', 'wechat', 'youtube', 'yahoo', 'weibo-circle', 'weibo-square', 'zhihu-circle', 'windows', 'wallet', 'yuque', 'warning', 'zhihu-square'],\n  outline: ['alibaba', 'align-left', 'align-right', 'alipay-circle', 'aliyun', 'android', 'apartment', 'ant-cloud', 'ant-design', 'apple', 'api', 'appstore-add', 'area-chart', 'amazon', 'arrow-right', 'arrow-left', 'arrow-down', 'alipay', 'audio-muted', 'appstore', 'audit', 'aliwangwang', 'arrows-alt', 'audio', 'backward', 'bar-chart', 'bars', 'behance', 'bg-colors', 'behance-square', 'alert', 'block', 'border-bottom', 'border-horizontal', 'bold', 'border-left', 'border', 'border-outer', 'border-inner', 'border-right', 'bell', 'align-center', 'borderless-table', 'box-plot', 'account-book', 'bug', 'build', 'bulb', 'arrow-up', 'book', 'calendar', 'camera', 'car', 'barcode', 'caret-down', 'border-verticle', 'caret-right', 'caret-left', 'check-circle', 'bank', 'check-square', 'check', 'ci-circle', 'chrome', 'ci', 'clear', 'caret-up', 'border-top', 'cloud-download', 'close', 'clock-circle', 'close-circle', 'carry-out', 'cloud-server', 'code', 'cloud-sync', 'cluster', 'cloud-upload', 'code-sandbox', 'coffee', 'codepen', 'calculator', 'comment', 'column-height', 'compress', 'close-square', 'contacts', 'compass', 'column-width', 'branches', 'copy', 'copyright', 'cloud', 'console-sql', 'copyright-circle', 'aim', 'codepen-circle', 'dash', 'database', 'credit-card', 'customer-service', 'dashboard', 'delete-column', 'delete', 'deployment-unit', 'desktop', 'diff', 'delete-row', 'disconnect', 'container', 'dollar-circle', 'dollar', 'dingtalk', 'dislike', 'delivered-procedure', 'double-right', 'down-circle', 'dingding', 'double-left', 'control', 'dot-chart', 'drag', 'download', 'dribbble', 'dribbble-square', 'dropbox', 'ellipsis', 'down', 'down-square', 'enter', 'euro-circle', 'exception', 'euro', 'exclamation', 'export', 'edit', 'expand', 'expand-alt', 'fall', 'fast-backward', 'eye', 'field-binary', 'fast-forward', 'field-number', 'field-string', 'environment', 'file-add', 'exclamation-circle', 'field-time', 'eye-invisible', 'file-exclamation', 'crown', 'file-excel', 'experiment', 'file-gif', 'file-jpg', 'file', 'facebook', 'file-image', 'file-ppt', 'file-protect', 'file-markdown', 'file-text', 'file-sync', 'file-unknown', 'filter', 'file-word', 'file-search', 'fire', 'file-zip', 'folder-open', 'flag', 'font-colors', 'font-size', 'folder', 'folder-view', 'form', 'folder-add', 'fork', 'frown', 'forward', 'file-pdf', 'fullscreen-exit', 'fund-view', 'function', 'funnel-plot', 'format-painter', 'gif', 'gateway', 'gitlab', 'gift', 'fund', 'github', 'fullscreen', 'gold', 'global', 'fund-projection-screen', 'google', 'google-plus', 'group', 'file-done', 'heat-map', 'holder', 'history', 'highlight', 'hourglass', 'home', 'hdd', 'html5', 'idcard', 'import', 'ie', 'insert-row-above', 'instagram', 'insert-row-below', 'insurance', 'info', 'info-circle', 'issues-close', 'interaction', 'insert-row-right', 'laptop', 'insert-row-left', 'heart', 'inbox', 'like', 'left-square', 'line-height', 'left-circle', 'linkedin', 'loading-3-quarters', 'loading', 'lock', 'logout', 'key', 'login', 'line-chart', 'mail', 'medicine-box', 'medium', 'meh', 'menu', 'medium-workmark', 'left', 'menu-unfold', 'menu-fold', 'link', 'minus-circle', 'minus', 'mac-command', 'minus-square', 'money-collect', 'italic', 'man', 'line', 'mobile', 'ordered-list', 'node-collapse', 'one-to-one', 'layout', 'merge-cells', 'number', 'more', 'pause', 'message', 'pause-circle', 'monitor', 'partition', 'pay-circle', 'pic-left', 'pic-center', 'pic-right', 'picture', 'phone', 'notification', 'pie-chart', 'play-square', 'play-circle', 'plus', 'node-expand', 'paper-clip', 'printer', 'pound-circle', 'poweroff', 'pound', 'plus-square', 'profile', 'property-safety', 'project', 'pushpin', 'pull-request', 'qrcode', 'radius-bottomleft', 'radar-chart', 'question-circle', 'radius-upleft', 'reconciliation', 'read', 'radius-upright', 'reddit', 'red-envelope', 'radius-setting', 'question', 'redo', 'node-index', 'rest', 'retweet', 'reload', 'right-circle', 'right', 'right-square', 'robot', 'rotate-left', 'radius-bottomright', 'rise', 'rocket', 'rollback', 'safety-certificate', 'safety', 'scissor', 'scan', 'save', 'percentage', 'schedule', 'security-scan', 'send', 'shop', 'select', 'share-alt', 'shake', 'plus-circle', 'rotate-right', 'qq', 'setting', 'sketch', 'skin', 'sisternode', 'slack', 'skype', 'small-dash', 'slack-square', 'sliders', 'smile', 'solution', 'snippets', 'shopping-cart', 'sound', 'star', 'sort-ascending', 'step-backward', 'split-cells', 'search', 'sort-descending', 'swap-left', 'subnode', 'stock', 'strikethrough', 'switcher', 'table', 'tablet', 'tag', 'taobao-circle', 'stop', 'tags', 'team', 'sync', 'swap-right', 'to-top', 'taobao', 'swap', 'transaction', 'trademark-circle', 'translation', 'trophy', 'step-forward', 'ungroup', 'undo', 'up-circle', 'underline', 'unordered-list', 'up-square', 'up', 'shrink', 'trademark', 'thunderbolt', 'user-delete', 'shopping', 'user', 'usergroup-delete', 'user-switch', 'unlock', 'tool', 'vertical-align-middle', 'verified', 'vertical-align-bottom', 'upload', 'vertical-right', 'user-add', 'twitter', 'video-camera-add', 'usergroup-add', 'vertical-align-top', 'vertical-left', 'video-camera', 'wechat', 'whats-app', 'wallet', 'weibo', 'woman', 'weibo-circle', 'warning', 'usb', 'yahoo', 'zhihu', 'weibo-square', 'youtube', 'zoom-in', 'yuque', 'windows', 'wifi', 'zoom-out'],\n  twotone: ['alert', 'api', 'appstore', 'bank', 'account-book', 'audio', 'book', 'bell', 'box-plot', 'bug', 'calendar', 'calculator', 'camera', 'bulb', 'carry-out', 'build', 'check-circle', 'check-square', 'ci-circle', 'ci', 'clock-circle', 'close-circle', 'close-square', 'car', 'code', 'compass', 'control', 'contacts', 'cloud', 'copy', 'copyright-circle', 'credit-card', 'copyright', 'crown', 'database', 'delete', 'diff', 'container', 'dislike', 'customer-service', 'dollar', 'down-circle', 'down-square', 'edit', 'dashboard', 'environment', 'euro-circle', 'dollar-circle', 'exclamation-circle', 'eye', 'euro', 'file-add', 'file-excel', 'file-exclamation', 'file-pdf', 'file-markdown', 'experiment', 'file-ppt', 'file-text', 'file', 'filter', 'file-image', 'file-unknown', 'file-zip', 'file-word', 'fire', 'folder-add', 'flag', 'folder-open', 'folder', 'funnel-plot', 'fund', 'gift', 'gold', 'heart', 'hdd', 'hourglass', 'highlight', 'home', 'html5', 'idcard', 'info-circle', 'insurance', 'interaction', 'eye-invisible', 'frown', 'left-square', 'like', 'left-circle', 'lock', 'mail', 'medicine-box', 'meh', 'message', 'minus-circle', 'minus-square', 'money-collect', 'pause-circle', 'mobile', 'notification', 'layout', 'picture', 'phone', 'play-circle', 'play-square', 'plus-square', 'pound-circle', 'printer', 'plus-circle', 'property-safety', 'project', 'profile', 'question-circle', 'pie-chart', 'pushpin', 'reconciliation', 'red-envelope', 'rest', 'right-circle', 'rocket', 'save', 'safety-certificate', 'schedule', 'security-scan', 'right-square', 'shopping', 'skin', 'sliders', 'shop', 'setting', 'star', 'smile', 'snippets', 'sound', 'switcher', 'stop', 'tag', 'tags', 'thunderbolt', 'tool', 'trademark-circle', 'trophy', 'up-circle', 'unlock', 'tablet', 'video-camera', 'wallet', 'up-square', 'warning', 'usb']\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANT_ICON_ANGULAR_CONSOLE_PREFIX, DynamicLoadingTimeoutError, HttpModuleNotImport, IconDirective, IconModule, IconNotFoundError, IconService, NameSpaceIsNotSpecifyError, SVGTagNotFoundError, UrlNotSafeError, alreadyHasAThemeSuffix, cloneSVG, error, getIconDefinitionFromAbbr, getNameAndNamespace, getSecondaryColor, hasNamespace, isIconDefinition, manifest, mapAbbrToTheme, replaceFillColor, warn, withSuffix, withSuffixAndColor };","map":{"version":3,"sources":["/Users/az/Desktop/mydevfolder/seir-ringo/Capstone/todoCap/todocapfe/node_modules/ng-zorro-antd/node_modules/@ant-design/icons-angular/fesm2015/ant-design-icons-angular.mjs"],"names":["DOCUMENT","CommonModule","i0","isDevMode","SecurityContext","Injectable","Optional","Inject","Directive","Input","NgModule","generate","i1","HttpClient","Subject","of","Observable","map","tap","finalize","catchError","share","filter","take","i2","ANT_ICON_ANGULAR_CONSOLE_PREFIX","error","message","console","warn","getSecondaryColor","primaryColor","withSuffix","name","theme","undefined","Error","withSuffixAndColor","pri","sec","mapAbbrToTheme","abbr","alreadyHasAThemeSuffix","endsWith","isIconDefinition","target","icon","getIconDefinitionFromAbbr","str","arr","split","splice","length","join","cloneSVG","svg","cloneNode","replaceFillColor","raw","replace","getNameAndNamespace","type","hasNamespace","NameSpaceIsNotSpecifyError","IconNotFoundError","HttpModuleNotImport","UrlNotSafeError","url","SVGTagNotFoundError","DynamicLoadingTimeoutError","JSONP_HANDLER_NAME","IconService","constructor","_rendererFactory","_handler","_document","sanitizer","defaultTheme","_svgDefinitions","Map","_svgRenderedDefinitions","_inProgressFetches","_assetsUrlRoot","_twoToneColorPalette","secondaryColor","_enableJsonpLoading","_jsonpIconLoad$","_renderer","createRenderer","_http","twoToneColor","Object","assign","useJsonpLoading","window","next","changeAssetsSource","prefix","addIcon","icons","forEach","set","addIconLiteral","literal","_","namespace","clear","getRenderedContent","definitionOrNull","get","$iconDefinition","_loadIconDynamically","pipe","i","_loadSVGFromCacheOrCreateNew","getCachedIcons","inProgress","suffix","safeUrl","sanitize","URL","source","responseType","_loadIconDynamicallyWithJsonp","definition","delete","subscriber","loader","createElement","timer","setTimeout","clean","src","parentNode","removeChild","clearTimeout","body","appendChild","subscribe","key","cached","_setSVGAttribute","_colorizeSVGIcon","_createSVGElementFromString","div","innerHTML","querySelector","setAttribute","twotone","children","childNodes","child","getAttribute","ɵfac","RendererFactory2","HttpBackend","DomSanitizer","ɵprov","decorators","args","checkMeta","prev","after","IconDirective","_iconService","_elementRef","ngOnChanges","changes","_changeIcon","Promise","resolve","_clearSVGElement","preMeta","_getSelfRenderMeta","_parseIconType","_setSVGElement","nativeElement","_a","el","tagName","toLowerCase","ElementRef","Renderer2","ɵdir","selector","IconModule","ɵmod","ɵinj","imports","exports","declarations","providers","manifest","fill","outline"],"mappings":"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aAD/B,EAC8C,eAD9C,EAC+D,eAD/D,EACgF,SADhF,EAC2F,KAD3F,EACkG,eADlG,EACmH,OADnH,EAC4H,OAD5H,EACqI,OADrI,EAC8I,UAD9I,EAC0J,MAD1J,EACkK,gBADlK,EACoL,gBADpL,EACsM,MADtM,EAC8M,MAD9M,EACsN,UADtN,EACkO,KADlO,EACyO,OADzO,EACkP,UADlP,EAC8P,YAD9P,EAC4Q,MAD5Q,EACoR,QADpR,EAC8R,UAD9R,EAC0S,KAD1S,EACiT,YADjT,EAC+T,YAD/T,EAC6U,UAD7U,EACyV,aADzV,EACwW,WADxW,EACqX,cADrX,EACqY,WADrY,EACkZ,QADlZ,EAC4Z,cAD5Z,EAC4a,cAD5a,EAC4b,cAD5b,EAC4c,cAD5c,EAC4d,qBAD5d,EACmf,qBADnf,EAC0gB,gBAD1gB,EAC4hB,gBAD5hB,EAC8iB,SAD9iB,EACyjB,UADzjB,EACqkB,WADrkB,EACklB,SADllB,EAC6lB,MAD7lB,EACqmB,MADrmB,EAC6mB,kBAD7mB,EACioB,aADjoB,EACgpB,kBADhpB,EACoqB,UADpqB,EACgrB,WADhrB,EAC6rB,QAD7rB,EACusB,OADvsB,EACgtB,iBADhtB,EACmuB,MADnuB,EAC2uB,SAD3uB,EACsvB,aADtvB,EACqwB,iBADrwB,EACwxB,iBADxxB,EAC2yB,gBAD3yB,EAC6zB,gBAD7zB,EAC+0B,MAD/0B,EACu1B,eADv1B,EACw2B,aADx2B,EACu3B,aADv3B,EACs4B,oBADt4B,EAC45B,YAD55B,EAC06B,iBAD16B,EAC67B,OAD77B,EACs8B,KADt8B,EAC68B,eAD78B,EAC89B,UAD99B,EAC0+B,eAD1+B,EAC2/B,cAD3/B,EAC2gC,UAD3gC,EACuhC,kBADvhC,EAC2iC,MAD3iC,EACmjC,aADnjC,EACkkC,YADlkC,EACglC,eADhlC,EACimC,UADjmC,EAC6mC,UAD7mC,EACynC,YADznC,EACuoC,WADvoC,EACopC,WADppC,EACiqC,UADjqC,EAC6qC,QAD7qC,EACurC,MADvrC,EAC+rC,cAD/rC,EAC+sC,QAD/sC,EACytC,aADztC,EACwuC,MADxuC,EACgvC,OADhvC,EACyvC,MADzvC,EACiwC,gBADjwC,EACmxC,SADnxC,EAC8xC,aAD9xC,EAC6yC,YAD7yC,EAC2zC,MAD3zC,EACm0C,QADn0C,EAC60C,QAD70C,EACu1C,MADv1C,EAC+1C,eAD/1C,EACg3C,oBADh3C,EACs4C,oBADt4C,EAC45C,WAD55C,EACy6C,OADz6C,EACk7C,MADl7C,EAC07C,KAD17C,EACi8C,WADj8C,EAC88C,QAD98C,EACw9C,WADx9C,EACq+C,aADr+C,EACo/C,eADp/C,EACqgD,OADrgD,EAC8gD,QAD9gD,EACwhD,aADxhD,EACuiD,QADviD,EACijD,WADjjD,EAC8jD,aAD9jD,EAC6kD,aAD7kD,EAC4lD,MAD5lD,EAComD,WADpmD,EACinD,UADjnD,EAC6nD,MAD7nD,EACqoD,MADroD,EAC6oD,WAD7oD,EAC0pD,cAD1pD,EAC0qD,eAD1qD,EAC2rD,KAD3rD,EACksD,eADlsD,EACmtD,SADntD,EAC8tD,cAD9tD,EAC8uD,cAD9uD,EAC8vD,QAD9vD,EACwwD,aADxwD,EACuxD,eADvxD,EACwyD,cADxyD,EACwzD,cADxzD,EACw0D,OADx0D,EACi1D,SADj1D,EAC41D,WAD51D,EACy2D,aADz2D,EACw3D,aADx3D,EACu4D,cADv4D,EACu5D,aADv5D,EACs6D,SADt6D,EACi7D,SADj7D,EAC47D,SAD57D,EACu8D,iBADv8D,EAC09D,WAD19D,EACu+D,SADv+D,EACk/D,iBADl/D,EACqgE,WADrgE,EACkhE,aADlhE,EACiiE,MADjiE,EACyiE,YADziE,EACujE,eADvjE,EACwkE,cADxkE,EACwlE,eADxlE,EACymE,cADzmE,EACynE,cADznE,EACyoE,MADzoE,EACipE,OADjpE,EAC0pE,QAD1pE,EACoqE,MADpqE,EAC4qE,oBAD5qE,EACksE,eADlsE,EACmtE,UADntE,EAC+tE,SAD/tE,EAC0uE,UAD1uE,EACsvE,eADtvE,EACuwE,QADvwE,EACixE,MADjxE,EACyxE,OADzxE,EACkyE,eADlyE,EACmzE,cADnzE,EACm0E,SADn0E,EAC80E,cAD90E,EAC81E,MAD91E,EACs2E,UADt2E,EACk3E,OADl3E,EAC23E,MAD33E,EACm4E,gBADn4E,EACq5E,OADr5E,EAC85E,MAD95E,EACs6E,UADt6E,EACk7E,eADl7E,EACm8E,KADn8E,EAC08E,cAD18E,EAC09E,MAD19E,EACk+E,QADl+E,EAC4+E,eAD5+E,EAC6/E,eAD7/E,EAC8gF,kBAD9gF,EACkiF,QADliF,EAC4iF,aAD5iF,EAC2jF,gBAD3jF,EAC6kF,QAD7kF,EACulF,gBADvlF,EACymF,MADzmF,EACinF,cADjnF,EACioF,WADjoF,EAC8oF,WAD9oF,EAC2pF,KAD3pF,EACkqF,QADlqF,EAC4qF,SAD5qF,EACurF,OADvrF,EACgsF,cADhsF,EACgtF,cADhtF,EACguF,cADhuF,EACgvF,SADhvF,EAC2vF,QAD3vF,EACqwF,OADrwF,EAC8wF,SAD9wF,EACyxF,cADzxF,CADO;AAIbC,EAAAA,OAAO,EAAE,CACL,SADK,EACM,YADN,EACoB,aADpB,EACmC,eADnC,EACoD,QADpD,EAC8D,SAD9D,EACyE,WADzE,EACsF,WADtF,EACmG,YADnG,EACiH,OADjH,EAC0H,KAD1H,EACiI,cADjI,EACiJ,YADjJ,EAC+J,QAD/J,EACyK,aADzK,EACwL,YADxL,EACsM,YADtM,EACoN,QADpN,EAC8N,aAD9N,EAC6O,UAD7O,EACyP,OADzP,EACkQ,aADlQ,EACiR,YADjR,EAC+R,OAD/R,EACwS,UADxS,EACoT,WADpT,EACiU,MADjU,EACyU,SADzU,EACoV,WADpV,EACiW,gBADjW,EACmX,OADnX,EAC4X,OAD5X,EACqY,eADrY,EACsZ,mBADtZ,EAC2a,MAD3a,EACmb,aADnb,EACkc,QADlc,EAC4c,cAD5c,EAC4d,cAD5d,EAC4e,cAD5e,EAC4f,MAD5f,EACogB,cADpgB,EACohB,kBADphB,EACwiB,UADxiB,EACojB,cADpjB,EACokB,KADpkB,EAC2kB,OAD3kB,EAColB,MADplB,EAC4lB,UAD5lB,EACwmB,MADxmB,EACgnB,UADhnB,EAC4nB,QAD5nB,EACsoB,KADtoB,EAC6oB,SAD7oB,EACwpB,YADxpB,EACsqB,iBADtqB,EACyrB,aADzrB,EACwsB,YADxsB,EACstB,cADttB,EACsuB,MADtuB,EAC8uB,cAD9uB,EAC8vB,OAD9vB,EACuwB,WADvwB,EACoxB,QADpxB,EAC8xB,IAD9xB,EACoyB,OADpyB,EAC6yB,UAD7yB,EACyzB,YADzzB,EACu0B,gBADv0B,EACy1B,OADz1B,EACk2B,cADl2B,EACk3B,cADl3B,EACk4B,WADl4B,EAC+4B,cAD/4B,EAC+5B,MAD/5B,EACu6B,YADv6B,EACq7B,SADr7B,EACg8B,cADh8B,EACg9B,cADh9B,EACg+B,QADh+B,EAC0+B,SAD1+B,EACq/B,YADr/B,EACmgC,SADngC,EAC8gC,eAD9gC,EAC+hC,UAD/hC,EAC2iC,cAD3iC,EAC2jC,UAD3jC,EACukC,SADvkC,EACklC,cADllC,EACkmC,UADlmC,EAC8mC,MAD9mC,EACsnC,WADtnC,EACmoC,OADnoC,EAC4oC,aAD5oC,EAC2pC,kBAD3pC,EAC+qC,KAD/qC,EACsrC,gBADtrC,EACwsC,MADxsC,EACgtC,UADhtC,EAC4tC,aAD5tC,EAC2uC,kBAD3uC,EAC+vC,WAD/vC,EAC4wC,eAD5wC,EAC6xC,QAD7xC,EACuyC,iBADvyC,EAC0zC,SAD1zC,EACq0C,MADr0C,EAC60C,YAD70C,EAC21C,YAD31C,EACy2C,WADz2C,EACs3C,eADt3C,EACu4C,QADv4C,EACi5C,UADj5C,EAC65C,SAD75C,EACw6C,qBADx6C,EAC+7C,cAD/7C,EAC+8C,aAD/8C,EAC89C,UAD99C,EAC0+C,aAD1+C,EACy/C,SADz/C,EACogD,WADpgD,EACihD,MADjhD,EACyhD,UADzhD,EACqiD,UADriD,EACijD,iBADjjD,EACokD,SADpkD,EAC+kD,UAD/kD,EAC2lD,MAD3lD,EACmmD,aADnmD,EACknD,OADlnD,EAC2nD,aAD3nD,EAC0oD,WAD1oD,EACupD,MADvpD,EAC+pD,aAD/pD,EAC8qD,QAD9qD,EACwrD,MADxrD,EACgsD,QADhsD,EAC0sD,YAD1sD,EACwtD,MADxtD,EACguD,eADhuD,EACivD,KADjvD,EACwvD,cADxvD,EACwwD,cADxwD,EACwxD,cADxxD,EACwyD,cADxyD,EACwzD,aADxzD,EACu0D,UADv0D,EACm1D,oBADn1D,EACy2D,YADz2D,EACu3D,eADv3D,EACw4D,kBADx4D,EAC45D,OAD55D,EACq6D,YADr6D,EACm7D,YADn7D,EACi8D,UADj8D,EAC68D,UAD78D,EACy9D,MADz9D,EACi+D,UADj+D,EAC6+D,YAD7+D,EAC2/D,UAD3/D,EACugE,cADvgE,EACuhE,eADvhE,EACwiE,WADxiE,EACqjE,WADrjE,EACkkE,cADlkE,EACklE,QADllE,EAC4lE,WAD5lE,EACymE,aADzmE,EACwnE,MADxnE,EACgoE,UADhoE,EAC4oE,aAD5oE,EAC2pE,MAD3pE,EACmqE,aADnqE,EACkrE,WADlrE,EAC+rE,QAD/rE,EACysE,aADzsE,EACwtE,MADxtE,EACguE,YADhuE,EAC8uE,MAD9uE,EACsvE,OADtvE,EAC+vE,SAD/vE,EAC0wE,UAD1wE,EACsxE,iBADtxE,EACyyE,WADzyE,EACszE,UADtzE,EACk0E,aADl0E,EACi1E,gBADj1E,EACm2E,KADn2E,EAC02E,SAD12E,EACq3E,QADr3E,EAC+3E,MAD/3E,EACu4E,MADv4E,EAC+4E,QAD/4E,EACy5E,YADz5E,EACu6E,MADv6E,EAC+6E,QAD/6E,EACy7E,wBADz7E,EACm9E,QADn9E,EAC69E,aAD79E,EAC4+E,OAD5+E,EACq/E,WADr/E,EACkgF,UADlgF,EAC8gF,QAD9gF,EACwhF,SADxhF,EACmiF,WADniF,EACgjF,WADhjF,EAC6jF,MAD7jF,EACqkF,KADrkF,EAC4kF,OAD5kF,EACqlF,QADrlF,EAC+lF,QAD/lF,EACymF,IADzmF,EAC+mF,kBAD/mF,EACmoF,WADnoF,EACgpF,kBADhpF,EACoqF,WADpqF,EACirF,MADjrF,EACyrF,aADzrF,EACwsF,cADxsF,EACwtF,aADxtF,EACuuF,kBADvuF,EAC2vF,QAD3vF,EACqwF,iBADrwF,EACwxF,OADxxF,EACiyF,OADjyF,EAC0yF,MAD1yF,EACkzF,aADlzF,EACi0F,aADj0F,EACg1F,aADh1F,EAC+1F,UAD/1F,EAC22F,oBAD32F,EACi4F,SADj4F,EAC44F,MAD54F,EACo5F,QADp5F,EAC85F,KAD95F,EACq6F,OADr6F,EAC86F,YAD96F,EAC47F,MAD57F,EACo8F,cADp8F,EACo9F,QADp9F,EAC89F,KAD99F,EACq+F,MADr+F,EAC6+F,iBAD7+F,EACggG,MADhgG,EACwgG,aADxgG,EACuhG,WADvhG,EACoiG,MADpiG,EAC4iG,cAD5iG,EAC4jG,OAD5jG,EACqkG,aADrkG,EAColG,cADplG,EAComG,eADpmG,EACqnG,QADrnG,EAC+nG,KAD/nG,EACsoG,MADtoG,EAC8oG,QAD9oG,EACwpG,cADxpG,EACwqG,eADxqG,EACyrG,YADzrG,EACusG,QADvsG,EACitG,aADjtG,EACguG,QADhuG,EAC0uG,MAD1uG,EACkvG,OADlvG,EAC2vG,SAD3vG,EACswG,cADtwG,EACsxG,SADtxG,EACiyG,WADjyG,EAC8yG,YAD9yG,EAC4zG,UAD5zG,EACw0G,YADx0G,EACs1G,WADt1G,EACm2G,SADn2G,EAC82G,OAD92G,EACu3G,cADv3G,EACu4G,WADv4G,EACo5G,aADp5G,EACm6G,aADn6G,EACk7G,MADl7G,EAC07G,aAD17G,EACy8G,YADz8G,EACu9G,SADv9G,EACk+G,cADl+G,EACk/G,UADl/G,EAC8/G,OAD9/G,EACugH,aADvgH,EACshH,SADthH,EACiiH,iBADjiH,EACojH,SADpjH,EAC+jH,SAD/jH,EAC0kH,cAD1kH,EAC0lH,QAD1lH,EAComH,mBADpmH,EACynH,aADznH,EACwoH,iBADxoH,EAC2pH,eAD3pH,EAC4qH,gBAD5qH,EAC8rH,MAD9rH,EACssH,gBADtsH,EACwtH,QADxtH,EACkuH,cADluH,EACkvH,gBADlvH,EACowH,UADpwH,EACgxH,MADhxH,EACwxH,YADxxH,EACsyH,MADtyH,EAC8yH,SAD9yH,EACyzH,QADzzH,EACm0H,cADn0H,EACm1H,OADn1H,EAC41H,cAD51H,EAC42H,OAD52H,EACq3H,aADr3H,EACo4H,oBADp4H,EAC05H,MAD15H,EACk6H,QADl6H,EAC46H,UAD56H,EACw7H,oBADx7H,EAC88H,QAD98H,EACw9H,SADx9H,EACm+H,MADn+H,EAC2+H,MAD3+H,EACm/H,YADn/H,EACigI,UADjgI,EAC6gI,eAD7gI,EAC8hI,MAD9hI,EACsiI,MADtiI,EAC8iI,QAD9iI,EACwjI,WADxjI,EACqkI,OADrkI,EAC8kI,aAD9kI,EAC6lI,cAD7lI,EAC6mI,IAD7mI,EACmnI,SADnnI,EAC8nI,QAD9nI,EACwoI,MADxoI,EACgpI,YADhpI,EAC8pI,OAD9pI,EACuqI,OADvqI,EACgrI,YADhrI,EAC8rI,cAD9rI,EAC8sI,SAD9sI,EACytI,OADztI,EACkuI,UADluI,EAC8uI,UAD9uI,EAC0vI,eAD1vI,EAC2wI,OAD3wI,EACoxI,MADpxI,EAC4xI,gBAD5xI,EAC8yI,eAD9yI,EAC+zI,aAD/zI,EAC80I,QAD90I,EACw1I,iBADx1I,EAC22I,WAD32I,EACw3I,SADx3I,EACm4I,OADn4I,EAC44I,eAD54I,EAC65I,UAD75I,EACy6I,OADz6I,EACk7I,QADl7I,EAC47I,KAD57I,EACm8I,eADn8I,EACo9I,MADp9I,EAC49I,MAD59I,EACo+I,MADp+I,EAC4+I,MAD5+I,EACo/I,YADp/I,EACkgJ,QADlgJ,EAC4gJ,QAD5gJ,EACshJ,MADthJ,EAC8hJ,aAD9hJ,EAC6iJ,kBAD7iJ,EACikJ,aADjkJ,EACglJ,QADhlJ,EAC0lJ,cAD1lJ,EAC0mJ,SAD1mJ,EACqnJ,MADrnJ,EAC6nJ,WAD7nJ,EAC0oJ,WAD1oJ,EACupJ,gBADvpJ,EACyqJ,WADzqJ,EACsrJ,IADtrJ,EAC4rJ,QAD5rJ,EACssJ,WADtsJ,EACmtJ,aADntJ,EACkuJ,aADluJ,EACivJ,UADjvJ,EAC6vJ,MAD7vJ,EACqwJ,kBADrwJ,EACyxJ,aADzxJ,EACwyJ,QADxyJ,EACkzJ,MADlzJ,EAC0zJ,uBAD1zJ,EACm1J,UADn1J,EAC+1J,uBAD/1J,EACw3J,QADx3J,EACk4J,gBADl4J,EACo5J,UADp5J,EACg6J,SADh6J,EAC26J,kBAD36J,EAC+7J,eAD/7J,EACg9J,oBADh9J,EACs+J,eADt+J,EACu/J,cADv/J,EACugK,QADvgK,EACihK,WADjhK,EAC8hK,QAD9hK,EACwiK,OADxiK,EACijK,OADjjK,EAC0jK,cAD1jK,EAC0kK,SAD1kK,EACqlK,KADrlK,EAC4lK,OAD5lK,EACqmK,OADrmK,EAC8mK,cAD9mK,EAC8nK,SAD9nK,EACyoK,SADzoK,EACopK,OADppK,EAC6pK,SAD7pK,EACwqK,MADxqK,EACgrK,UADhrK,CAJI;AAOb9C,EAAAA,OAAO,EAAE,CACL,OADK,EACI,KADJ,EACW,UADX,EACuB,MADvB,EAC+B,cAD/B,EAC+C,OAD/C,EACwD,MADxD,EACgE,MADhE,EACwE,UADxE,EACoF,KADpF,EAC2F,UAD3F,EACuG,YADvG,EACqH,QADrH,EAC+H,MAD/H,EACuI,WADvI,EACoJ,OADpJ,EAC6J,cAD7J,EAC6K,cAD7K,EAC6L,WAD7L,EAC0M,IAD1M,EACgN,cADhN,EACgO,cADhO,EACgP,cADhP,EACgQ,KADhQ,EACuQ,MADvQ,EAC+Q,SAD/Q,EAC0R,SAD1R,EACqS,UADrS,EACiT,OADjT,EAC0T,MAD1T,EACkU,kBADlU,EACsV,aADtV,EACqW,WADrW,EACkX,OADlX,EAC2X,UAD3X,EACuY,QADvY,EACiZ,MADjZ,EACyZ,WADzZ,EACsa,SADta,EACib,kBADjb,EACqc,QADrc,EAC+c,aAD/c,EAC8d,aAD9d,EAC6e,MAD7e,EACqf,WADrf,EACkgB,aADlgB,EACihB,aADjhB,EACgiB,eADhiB,EACijB,oBADjjB,EACukB,KADvkB,EAC8kB,MAD9kB,EACslB,UADtlB,EACkmB,YADlmB,EACgnB,kBADhnB,EACooB,UADpoB,EACgpB,eADhpB,EACiqB,YADjqB,EAC+qB,UAD/qB,EAC2rB,WAD3rB,EACwsB,MADxsB,EACgtB,QADhtB,EAC0tB,YAD1tB,EACwuB,cADxuB,EACwvB,UADxvB,EACowB,WADpwB,EACixB,MADjxB,EACyxB,YADzxB,EACuyB,MADvyB,EAC+yB,aAD/yB,EAC8zB,QAD9zB,EACw0B,aADx0B,EACu1B,MADv1B,EAC+1B,MAD/1B,EACu2B,MADv2B,EAC+2B,OAD/2B,EACw3B,KADx3B,EAC+3B,WAD/3B,EAC44B,WAD54B,EACy5B,MADz5B,EACi6B,OADj6B,EAC06B,QAD16B,EACo7B,aADp7B,EACm8B,WADn8B,EACg9B,aADh9B,EAC+9B,eAD/9B,EACg/B,OADh/B,EACy/B,aADz/B,EACwgC,MADxgC,EACghC,aADhhC,EAC+hC,MAD/hC,EACuiC,MADviC,EAC+iC,cAD/iC,EAC+jC,KAD/jC,EACskC,SADtkC,EACilC,cADjlC,EACimC,cADjmC,EACinC,eADjnC,EACkoC,cADloC,EACkpC,QADlpC,EAC4pC,cAD5pC,EAC4qC,QAD5qC,EACsrC,SADtrC,EACisC,OADjsC,EAC0sC,aAD1sC,EACytC,aADztC,EACwuC,aADxuC,EACuvC,cADvvC,EACuwC,SADvwC,EACkxC,aADlxC,EACiyC,iBADjyC,EACozC,SADpzC,EAC+zC,SAD/zC,EAC00C,iBAD10C,EAC61C,WAD71C,EAC02C,SAD12C,EACq3C,gBADr3C,EACu4C,cADv4C,EACu5C,MADv5C,EAC+5C,cAD/5C,EAC+6C,QAD/6C,EACy7C,MADz7C,EACi8C,oBADj8C,EACu9C,UADv9C,EACm+C,eADn+C,EACo/C,cADp/C,EACogD,UADpgD,EACghD,MADhhD,EACwhD,SADxhD,EACmiD,MADniD,EAC2iD,SAD3iD,EACsjD,MADtjD,EAC8jD,OAD9jD,EACukD,UADvkD,EACmlD,OADnlD,EAC4lD,UAD5lD,EACwmD,MADxmD,EACgnD,KADhnD,EACunD,MADvnD,EAC+nD,aAD/nD,EAC8oD,MAD9oD,EACspD,kBADtpD,EAC0qD,QAD1qD,EACorD,WADprD,EACisD,QADjsD,EAC2sD,QAD3sD,EACqtD,cADrtD,EACquD,QADruD,EAC+uD,WAD/uD,EAC4vD,SAD5vD,EACuwD,KADvwD;AAPI,CAAjB;AAYA;AACA;AACA;;AAEA,SAAS3H,+BAAT,EAA0C4C,0BAA1C,EAAsEJ,mBAAtE,EAA2FkG,aAA3F,EAA0GsB,UAA1G,EAAsHzH,iBAAtH,EAAyIO,WAAzI,EAAsJR,0BAAtJ,EAAkLK,mBAAlL,EAAuMF,eAAvM,EAAwNxB,sBAAxN,EAAgPY,QAAhP,EAA0P5B,KAA1P,EAAiQqB,yBAAjQ,EAA4Ra,mBAA5R,EAAiT9B,iBAAjT,EAAoUgC,YAApU,EAAkVlB,gBAAlV,EAAoWoJ,QAApW,EAA8WxJ,cAA9W,EAA8XiB,gBAA9X,EAAgZ5B,IAAhZ,EAAsZG,UAAtZ,EAAkaK,kBAAla","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { isDevMode, SecurityContext, Injectable, Optional, Inject, Directive, Input, NgModule } from '@angular/core';\nimport { generate } from '@ant-design/colors';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, of, Observable } from 'rxjs';\nimport { map, tap, finalize, catchError, share, filter, take } from 'rxjs/operators';\nimport * as i2 from '@angular/platform-browser';\n\nconst ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\nfunction error(message) {\n    console.error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n}\nfunction warn(message) {\n    if (isDevMode()) {\n        console.warn(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n    }\n}\nfunction getSecondaryColor(primaryColor) {\n    return generate(primaryColor)[0];\n}\nfunction withSuffix(name, theme) {\n    switch (theme) {\n        case 'fill': return `${name}-fill`;\n        case 'outline': return `${name}-o`;\n        case 'twotone': return `${name}-twotone`;\n        case undefined: return name;\n        default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Theme \"${theme}\" is not a recognized theme!`);\n    }\n}\nfunction withSuffixAndColor(name, theme, pri, sec) {\n    return `${withSuffix(name, theme)}-${pri}-${sec}`;\n}\nfunction mapAbbrToTheme(abbr) {\n    return abbr === 'o' ? 'outline' : abbr;\n}\nfunction alreadyHasAThemeSuffix(name) {\n    return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\nfunction isIconDefinition(target) {\n    return (typeof target === 'object' &&\n        typeof target.name === 'string' &&\n        (typeof target.theme === 'string' || target.theme === undefined) &&\n        typeof target.icon === 'string');\n}\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\nfunction getIconDefinitionFromAbbr(str) {\n    const arr = str.split('-');\n    const theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n    const name = arr.join('-');\n    return {\n        name,\n        theme,\n        icon: ''\n    };\n}\nfunction cloneSVG(svg) {\n    return svg.cloneNode(true);\n}\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\nfunction replaceFillColor(raw) {\n    return raw\n        .replace(/['\"]#333['\"]/g, '\"primaryColor\"')\n        .replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"')\n        .replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"')\n        .replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\nfunction getNameAndNamespace(type) {\n    const split = type.split(':');\n    switch (split.length) {\n        case 1: return [type, ''];\n        case 2: return [split[1], split[0]];\n        default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The icon type ${type} is not valid!`);\n    }\n}\nfunction hasNamespace(type) {\n    return getNameAndNamespace(type)[1] !== '';\n}\n\nfunction NameSpaceIsNotSpecifyError() {\n    return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Type should have a namespace. Try \"namespace:${name}\".`);\n}\nfunction IconNotFoundError(icon) {\n    return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}the icon ${icon} does not exist or is not registered.`);\n}\nfunction HttpModuleNotImport() {\n    error(`you need to import \"HttpClientModule\" to use dynamic importing.`);\n    return null;\n}\nfunction UrlNotSafeError(url) {\n    return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The url \"${url}\" is unsafe.`);\n}\nfunction SVGTagNotFoundError() {\n    return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}<svg> tag not found.`);\n}\nfunction DynamicLoadingTimeoutError() {\n    return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Importing timeout error.`);\n}\n\nconst JSONP_HANDLER_NAME = '__ant_icon_load';\nclass IconService {\n    constructor(_rendererFactory, _handler, \n    // tslint:disable-next-line:no-any\n    _document, sanitizer) {\n        this._rendererFactory = _rendererFactory;\n        this._handler = _handler;\n        this._document = _document;\n        this.sanitizer = sanitizer;\n        this.defaultTheme = 'outline';\n        /**\n         * All icon definitions would be registered here.\n         */\n        this._svgDefinitions = new Map();\n        /**\n         * Cache all rendered icons. Icons are identified by name, theme,\n         * and for twotone icons, primary color and secondary color.\n         */\n        this._svgRenderedDefinitions = new Map();\n        this._inProgressFetches = new Map();\n        /**\n         * Url prefix for fetching inline SVG by dynamic importing.\n         */\n        this._assetsUrlRoot = '';\n        this._twoToneColorPalette = {\n            primaryColor: '#333333',\n            secondaryColor: '#E6E6E6'\n        };\n        /** A flag indicates whether jsonp loading is enabled. */\n        this._enableJsonpLoading = false;\n        this._jsonpIconLoad$ = new Subject();\n        this._renderer = this._rendererFactory.createRenderer(null, null);\n        if (this._handler) {\n            this._http = new HttpClient(this._handler);\n        }\n    }\n    set twoToneColor({ primaryColor, secondaryColor }) {\n        this._twoToneColorPalette.primaryColor = primaryColor;\n        this._twoToneColorPalette.secondaryColor =\n            secondaryColor || getSecondaryColor(primaryColor);\n    }\n    get twoToneColor() {\n        // Make a copy to avoid unexpected changes.\n        return Object.assign({}, this._twoToneColorPalette);\n    }\n    /**\n     * Call this method to switch to jsonp like loading.\n     */\n    useJsonpLoading() {\n        if (!this._enableJsonpLoading) {\n            this._enableJsonpLoading = true;\n            window[JSONP_HANDLER_NAME] = (icon) => {\n                this._jsonpIconLoad$.next(icon);\n            };\n        }\n        else {\n            warn('You are already using jsonp loading.');\n        }\n    }\n    /**\n     * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n     * @param prefix\n     */\n    changeAssetsSource(prefix) {\n        this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n    }\n    /**\n     * Add icons provided by ant design.\n     * @param icons\n     */\n    addIcon(...icons) {\n        icons.forEach(icon => {\n            this._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n        });\n    }\n    /**\n     * Register an icon. Namespace is required.\n     * @param type\n     * @param literal\n     */\n    addIconLiteral(type, literal) {\n        const [_, namespace] = getNameAndNamespace(type);\n        if (!namespace) {\n            throw NameSpaceIsNotSpecifyError();\n        }\n        this.addIcon({ name: type, icon: literal });\n    }\n    /**\n     * Remove all cache.\n     */\n    clear() {\n        this._svgDefinitions.clear();\n        this._svgRenderedDefinitions.clear();\n    }\n    /**\n     * Get a rendered `SVGElement`.\n     * @param icon\n     * @param twoToneColor\n     */\n    getRenderedContent(icon, twoToneColor) {\n        // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n        const definitionOrNull = isIconDefinition(icon)\n            ? icon\n            : this._svgDefinitions.get(icon) || null;\n        // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n        // Otherwise try to fetch it from remote.\n        const $iconDefinition = definitionOrNull\n            ? of(definitionOrNull)\n            : this._loadIconDynamically(icon);\n        // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n        return $iconDefinition.pipe(map(i => {\n            if (!i) {\n                throw IconNotFoundError(icon);\n            }\n            return this._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n        }));\n    }\n    getCachedIcons() {\n        return this._svgDefinitions;\n    }\n    /**\n     * Get raw svg and assemble a `IconDefinition` object.\n     * @param type\n     */\n    _loadIconDynamically(type) {\n        // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n        if (!this._http && !this._enableJsonpLoading) {\n            return of(HttpModuleNotImport());\n        }\n        // If multi directive ask for the same icon at the same time,\n        // request should only be fired once.\n        let inProgress = this._inProgressFetches.get(type);\n        if (!inProgress) {\n            const [name, namespace] = getNameAndNamespace(type);\n            // If the string has a namespace within, create a simple `IconDefinition`.\n            const icon = namespace\n                ? { name: type, icon: '' }\n                : getIconDefinitionFromAbbr(name);\n            const suffix = this._enableJsonpLoading ? '.js' : '.svg';\n            const url = (namespace\n                ? `${this._assetsUrlRoot}assets/${namespace}/${name}`\n                : `${this._assetsUrlRoot}assets/${icon.theme}/${icon.name}`) + suffix;\n            const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n            if (!safeUrl) {\n                throw UrlNotSafeError(url);\n            }\n            const source = !this._enableJsonpLoading\n                ? this._http\n                    .get(safeUrl, { responseType: 'text' })\n                    .pipe(map(literal => (Object.assign(Object.assign({}, icon), { icon: literal }))))\n                : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n            inProgress = source.pipe(tap(definition => this.addIcon(definition)), finalize(() => this._inProgressFetches.delete(type)), catchError(() => of(null)), share());\n            this._inProgressFetches.set(type, inProgress);\n        }\n        return inProgress;\n    }\n    _loadIconDynamicallyWithJsonp(icon, url) {\n        return new Observable(subscriber => {\n            const loader = this._document.createElement('script');\n            const timer = setTimeout(() => {\n                clean();\n                subscriber.error(DynamicLoadingTimeoutError());\n            }, 6000);\n            loader.src = url;\n            function clean() {\n                loader.parentNode.removeChild(loader);\n                clearTimeout(timer);\n            }\n            this._document.body.appendChild(loader);\n            this._jsonpIconLoad$\n                .pipe(filter(i => i.name === icon.name && i.theme === icon.theme), take(1))\n                .subscribe(i => {\n                subscriber.next(i);\n                clean();\n            });\n        });\n    }\n    /**\n     * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n     * @param icon\n     * @param twoToneColor\n     */\n    _loadSVGFromCacheOrCreateNew(icon, twoToneColor) {\n        let svg;\n        const pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n        const sec = getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n        const key = icon.theme === 'twotone'\n            ? withSuffixAndColor(icon.name, icon.theme, pri, sec)\n            : icon.theme === undefined\n                ? icon.name\n                : withSuffix(icon.name, icon.theme);\n        // Try to make a copy from cache.\n        const cached = this._svgRenderedDefinitions.get(key);\n        if (cached) {\n            svg = cached.icon;\n        }\n        else {\n            svg = this._setSVGAttribute(this._colorizeSVGIcon(\n            // Icons provided by ant design should be refined to remove preset colors.\n            this._createSVGElementFromString(hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)), icon.theme === 'twotone', pri, sec));\n            // Cache it.\n            this._svgRenderedDefinitions.set(key, Object.assign(Object.assign({}, icon), { icon: svg }));\n        }\n        return cloneSVG(svg);\n    }\n    _createSVGElementFromString(str) {\n        const div = this._document.createElement('div');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        if (!svg) {\n            throw SVGTagNotFoundError;\n        }\n        return svg;\n    }\n    _setSVGAttribute(svg) {\n        this._renderer.setAttribute(svg, 'width', '1em');\n        this._renderer.setAttribute(svg, 'height', '1em');\n        return svg;\n    }\n    _colorizeSVGIcon(svg, twotone, pri, sec) {\n        if (twotone) {\n            const children = svg.childNodes;\n            const length = children.length;\n            for (let i = 0; i < length; i++) {\n                const child = children[i];\n                if (child.getAttribute('fill') === 'secondaryColor') {\n                    this._renderer.setAttribute(child, 'fill', sec);\n                }\n                else {\n                    this._renderer.setAttribute(child, 'fill', pri);\n                }\n            }\n        }\n        this._renderer.setAttribute(svg, 'fill', 'currentColor');\n        return svg;\n    }\n}\nIconService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconService, deps: [{ token: i0.RendererFactory2 }, { token: i1.HttpBackend, optional: true }, { token: DOCUMENT, optional: true }, { token: i2.DomSanitizer }], target: i0.ɵɵFactoryTarget.Injectable });\nIconService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i0.RendererFactory2 }, { type: i1.HttpBackend, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.DomSanitizer }];\n    } });\n\nfunction checkMeta(prev, after) {\n    return prev.type === after.type && prev.theme === after.theme && prev.twoToneColor === after.twoToneColor;\n}\nclass IconDirective {\n    constructor(_iconService, _elementRef, _renderer) {\n        this._iconService = _iconService;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n    }\n    ngOnChanges(changes) {\n        if (changes.type || changes.theme || changes.twoToneColor) {\n            this._changeIcon();\n        }\n    }\n    /**\n     * Render a new icon in the current element. Remove the icon when `type` is falsy.\n     */\n    _changeIcon() {\n        return new Promise(resolve => {\n            if (!this.type) {\n                this._clearSVGElement();\n                resolve(null);\n            }\n            else {\n                const preMeta = this._getSelfRenderMeta();\n                this._iconService.getRenderedContent(this._parseIconType(this.type, this.theme), this.twoToneColor).subscribe(svg => {\n                    // avoid race condition, see https://github.com/ant-design/ant-design-icons/issues/315\n                    if (checkMeta(preMeta, this._getSelfRenderMeta())) {\n                        this._setSVGElement(svg);\n                        resolve(svg);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                });\n            }\n        });\n    }\n    _getSelfRenderMeta() {\n        return {\n            type: this.type,\n            theme: this.theme,\n            twoToneColor: this.twoToneColor\n        };\n    }\n    /**\n     * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n     * If namespace is specified, ignore theme because it meaningless for users' icons.\n     *\n     * @param type\n     * @param theme\n     */\n    _parseIconType(type, theme) {\n        if (isIconDefinition(type)) {\n            return type;\n        }\n        else {\n            const [name, namespace] = getNameAndNamespace(type);\n            if (namespace) {\n                return type;\n            }\n            if (alreadyHasAThemeSuffix(name)) {\n                if (!!theme) {\n                    warn(`'type' ${name} already gets a theme inside so 'theme' ${theme} would be ignored`);\n                }\n                return name;\n            }\n            else {\n                return withSuffix(name, theme || this._iconService.defaultTheme);\n            }\n        }\n    }\n    _setSVGElement(svg) {\n        this._clearSVGElement();\n        this._renderer.appendChild(this._elementRef.nativeElement, svg);\n    }\n    _clearSVGElement() {\n        var _a;\n        const el = this._elementRef.nativeElement;\n        const children = el.childNodes;\n        const length = children.length;\n        for (let i = length - 1; i >= 0; i--) {\n            const child = children[i];\n            if (((_a = child.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'svg') {\n                this._renderer.removeChild(el, child);\n            }\n        }\n    }\n}\nIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconDirective, deps: [{ token: IconService }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: IconDirective, selector: \"[antIcon]\", inputs: { type: \"type\", theme: \"theme\", twoToneColor: \"twoToneColor\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[antIcon]'\n                }]\n        }], ctorParameters: function () { return [{ type: IconService }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { type: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], twoToneColor: [{\n                type: Input\n            }] } });\n\nclass IconModule {\n}\nIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconModule, declarations: [IconDirective], imports: [CommonModule], exports: [IconDirective] });\nIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconModule, providers: [IconService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: IconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [IconDirective],\n                    declarations: [IconDirective],\n                    providers: [IconService]\n                }]\n        }] });\n\nconst manifest = {\n    fill: [\n        'account-book', 'alipay-circle', 'aliwangwang', 'amazon-circle', 'amazon-square', 'android', 'api', 'alipay-square', 'apple', 'alert', 'audio', 'backward', 'bank', 'behance-square', 'behance-circle', 'bell', 'book', 'box-plot', 'bug', 'build', 'appstore', 'calculator', 'bulb', 'camera', 'calendar', 'car', 'caret-down', 'caret-left', 'caret-up', 'caret-right', 'carry-out', 'check-square', 'ci-circle', 'chrome', 'close-circle', 'check-circle', 'close-square', 'clock-circle', 'code-sandbox-circle', 'code-sandbox-square', 'codepen-circle', 'codepen-square', 'compass', 'contacts', 'container', 'control', 'copy', 'code', 'copyright-circle', 'credit-card', 'customer-service', 'database', 'dashboard', 'delete', 'cloud', 'dingtalk-circle', 'diff', 'dislike', 'down-square', 'dribbble-square', 'dribbble-circle', 'dropbox-circle', 'dropbox-square', 'edit', 'dollar-circle', 'environment', 'euro-circle', 'exclamation-circle', 'experiment', 'dingtalk-square', 'crown', 'eye', 'eye-invisible', 'facebook', 'fast-backward', 'fast-forward', 'file-add', 'file-exclamation', 'file', 'down-circle', 'file-image', 'file-markdown', 'file-pdf', 'file-ppt', 'file-excel', 'file-word', 'file-text', 'file-zip', 'filter', 'fire', 'file-unknown', 'folder', 'folder-open', 'flag', 'frown', 'fund', 'format-painter', 'forward', 'funnel-plot', 'folder-add', 'gold', 'gitlab', 'github', 'gift', 'google-square', 'google-plus-circle', 'google-plus-square', 'highlight', 'heart', 'home', 'hdd', 'hourglass', 'idcard', 'ie-circle', 'info-circle', 'google-circle', 'html5', 'golden', 'interaction', 'layout', 'ie-square', 'left-circle', 'left-square', 'like', 'insurance', 'linkedin', 'lock', 'mail', 'instagram', 'medicine-box', 'medium-square', 'meh', 'medium-circle', 'message', 'minus-circle', 'minus-square', 'mobile', 'mac-command', 'money-collect', 'notification', 'pause-circle', 'phone', 'picture', 'pie-chart', 'play-circle', 'play-square', 'pound-circle', 'plus-circle', 'printer', 'profile', 'pushpin', 'property-safety', 'qq-circle', 'project', 'question-circle', 'qq-square', 'plus-square', 'read', 'pay-circle', 'reddit-circle', 'red-envelope', 'reddit-square', 'right-square', 'right-circle', 'rest', 'robot', 'rocket', 'save', 'safety-certificate', 'security-scan', 'schedule', 'setting', 'shopping', 'sketch-circle', 'signal', 'skin', 'skype', 'sketch-square', 'slack-square', 'sliders', 'slack-circle', 'shop', 'snippets', 'sound', 'star', 'reconciliation', 'smile', 'stop', 'switcher', 'step-backward', 'tag', 'step-forward', 'tags', 'tablet', 'taobao-circle', 'taobao-square', 'trademark-circle', 'trophy', 'thunderbolt', 'twitter-circle', 'unlock', 'twitter-square', 'tool', 'video-camera', 'up-square', 'up-circle', 'usb', 'wechat', 'youtube', 'yahoo', 'weibo-circle', 'weibo-square', 'zhihu-circle', 'windows', 'wallet', 'yuque', 'warning', 'zhihu-square'\n    ],\n    outline: [\n        'alibaba', 'align-left', 'align-right', 'alipay-circle', 'aliyun', 'android', 'apartment', 'ant-cloud', 'ant-design', 'apple', 'api', 'appstore-add', 'area-chart', 'amazon', 'arrow-right', 'arrow-left', 'arrow-down', 'alipay', 'audio-muted', 'appstore', 'audit', 'aliwangwang', 'arrows-alt', 'audio', 'backward', 'bar-chart', 'bars', 'behance', 'bg-colors', 'behance-square', 'alert', 'block', 'border-bottom', 'border-horizontal', 'bold', 'border-left', 'border', 'border-outer', 'border-inner', 'border-right', 'bell', 'align-center', 'borderless-table', 'box-plot', 'account-book', 'bug', 'build', 'bulb', 'arrow-up', 'book', 'calendar', 'camera', 'car', 'barcode', 'caret-down', 'border-verticle', 'caret-right', 'caret-left', 'check-circle', 'bank', 'check-square', 'check', 'ci-circle', 'chrome', 'ci', 'clear', 'caret-up', 'border-top', 'cloud-download', 'close', 'clock-circle', 'close-circle', 'carry-out', 'cloud-server', 'code', 'cloud-sync', 'cluster', 'cloud-upload', 'code-sandbox', 'coffee', 'codepen', 'calculator', 'comment', 'column-height', 'compress', 'close-square', 'contacts', 'compass', 'column-width', 'branches', 'copy', 'copyright', 'cloud', 'console-sql', 'copyright-circle', 'aim', 'codepen-circle', 'dash', 'database', 'credit-card', 'customer-service', 'dashboard', 'delete-column', 'delete', 'deployment-unit', 'desktop', 'diff', 'delete-row', 'disconnect', 'container', 'dollar-circle', 'dollar', 'dingtalk', 'dislike', 'delivered-procedure', 'double-right', 'down-circle', 'dingding', 'double-left', 'control', 'dot-chart', 'drag', 'download', 'dribbble', 'dribbble-square', 'dropbox', 'ellipsis', 'down', 'down-square', 'enter', 'euro-circle', 'exception', 'euro', 'exclamation', 'export', 'edit', 'expand', 'expand-alt', 'fall', 'fast-backward', 'eye', 'field-binary', 'fast-forward', 'field-number', 'field-string', 'environment', 'file-add', 'exclamation-circle', 'field-time', 'eye-invisible', 'file-exclamation', 'crown', 'file-excel', 'experiment', 'file-gif', 'file-jpg', 'file', 'facebook', 'file-image', 'file-ppt', 'file-protect', 'file-markdown', 'file-text', 'file-sync', 'file-unknown', 'filter', 'file-word', 'file-search', 'fire', 'file-zip', 'folder-open', 'flag', 'font-colors', 'font-size', 'folder', 'folder-view', 'form', 'folder-add', 'fork', 'frown', 'forward', 'file-pdf', 'fullscreen-exit', 'fund-view', 'function', 'funnel-plot', 'format-painter', 'gif', 'gateway', 'gitlab', 'gift', 'fund', 'github', 'fullscreen', 'gold', 'global', 'fund-projection-screen', 'google', 'google-plus', 'group', 'file-done', 'heat-map', 'holder', 'history', 'highlight', 'hourglass', 'home', 'hdd', 'html5', 'idcard', 'import', 'ie', 'insert-row-above', 'instagram', 'insert-row-below', 'insurance', 'info', 'info-circle', 'issues-close', 'interaction', 'insert-row-right', 'laptop', 'insert-row-left', 'heart', 'inbox', 'like', 'left-square', 'line-height', 'left-circle', 'linkedin', 'loading-3-quarters', 'loading', 'lock', 'logout', 'key', 'login', 'line-chart', 'mail', 'medicine-box', 'medium', 'meh', 'menu', 'medium-workmark', 'left', 'menu-unfold', 'menu-fold', 'link', 'minus-circle', 'minus', 'mac-command', 'minus-square', 'money-collect', 'italic', 'man', 'line', 'mobile', 'ordered-list', 'node-collapse', 'one-to-one', 'layout', 'merge-cells', 'number', 'more', 'pause', 'message', 'pause-circle', 'monitor', 'partition', 'pay-circle', 'pic-left', 'pic-center', 'pic-right', 'picture', 'phone', 'notification', 'pie-chart', 'play-square', 'play-circle', 'plus', 'node-expand', 'paper-clip', 'printer', 'pound-circle', 'poweroff', 'pound', 'plus-square', 'profile', 'property-safety', 'project', 'pushpin', 'pull-request', 'qrcode', 'radius-bottomleft', 'radar-chart', 'question-circle', 'radius-upleft', 'reconciliation', 'read', 'radius-upright', 'reddit', 'red-envelope', 'radius-setting', 'question', 'redo', 'node-index', 'rest', 'retweet', 'reload', 'right-circle', 'right', 'right-square', 'robot', 'rotate-left', 'radius-bottomright', 'rise', 'rocket', 'rollback', 'safety-certificate', 'safety', 'scissor', 'scan', 'save', 'percentage', 'schedule', 'security-scan', 'send', 'shop', 'select', 'share-alt', 'shake', 'plus-circle', 'rotate-right', 'qq', 'setting', 'sketch', 'skin', 'sisternode', 'slack', 'skype', 'small-dash', 'slack-square', 'sliders', 'smile', 'solution', 'snippets', 'shopping-cart', 'sound', 'star', 'sort-ascending', 'step-backward', 'split-cells', 'search', 'sort-descending', 'swap-left', 'subnode', 'stock', 'strikethrough', 'switcher', 'table', 'tablet', 'tag', 'taobao-circle', 'stop', 'tags', 'team', 'sync', 'swap-right', 'to-top', 'taobao', 'swap', 'transaction', 'trademark-circle', 'translation', 'trophy', 'step-forward', 'ungroup', 'undo', 'up-circle', 'underline', 'unordered-list', 'up-square', 'up', 'shrink', 'trademark', 'thunderbolt', 'user-delete', 'shopping', 'user', 'usergroup-delete', 'user-switch', 'unlock', 'tool', 'vertical-align-middle', 'verified', 'vertical-align-bottom', 'upload', 'vertical-right', 'user-add', 'twitter', 'video-camera-add', 'usergroup-add', 'vertical-align-top', 'vertical-left', 'video-camera', 'wechat', 'whats-app', 'wallet', 'weibo', 'woman', 'weibo-circle', 'warning', 'usb', 'yahoo', 'zhihu', 'weibo-square', 'youtube', 'zoom-in', 'yuque', 'windows', 'wifi', 'zoom-out'\n    ],\n    twotone: [\n        'alert', 'api', 'appstore', 'bank', 'account-book', 'audio', 'book', 'bell', 'box-plot', 'bug', 'calendar', 'calculator', 'camera', 'bulb', 'carry-out', 'build', 'check-circle', 'check-square', 'ci-circle', 'ci', 'clock-circle', 'close-circle', 'close-square', 'car', 'code', 'compass', 'control', 'contacts', 'cloud', 'copy', 'copyright-circle', 'credit-card', 'copyright', 'crown', 'database', 'delete', 'diff', 'container', 'dislike', 'customer-service', 'dollar', 'down-circle', 'down-square', 'edit', 'dashboard', 'environment', 'euro-circle', 'dollar-circle', 'exclamation-circle', 'eye', 'euro', 'file-add', 'file-excel', 'file-exclamation', 'file-pdf', 'file-markdown', 'experiment', 'file-ppt', 'file-text', 'file', 'filter', 'file-image', 'file-unknown', 'file-zip', 'file-word', 'fire', 'folder-add', 'flag', 'folder-open', 'folder', 'funnel-plot', 'fund', 'gift', 'gold', 'heart', 'hdd', 'hourglass', 'highlight', 'home', 'html5', 'idcard', 'info-circle', 'insurance', 'interaction', 'eye-invisible', 'frown', 'left-square', 'like', 'left-circle', 'lock', 'mail', 'medicine-box', 'meh', 'message', 'minus-circle', 'minus-square', 'money-collect', 'pause-circle', 'mobile', 'notification', 'layout', 'picture', 'phone', 'play-circle', 'play-square', 'plus-square', 'pound-circle', 'printer', 'plus-circle', 'property-safety', 'project', 'profile', 'question-circle', 'pie-chart', 'pushpin', 'reconciliation', 'red-envelope', 'rest', 'right-circle', 'rocket', 'save', 'safety-certificate', 'schedule', 'security-scan', 'right-square', 'shopping', 'skin', 'sliders', 'shop', 'setting', 'star', 'smile', 'snippets', 'sound', 'switcher', 'stop', 'tag', 'tags', 'thunderbolt', 'tool', 'trademark-circle', 'trophy', 'up-circle', 'unlock', 'tablet', 'video-camera', 'wallet', 'up-square', 'warning', 'usb'\n    ]\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANT_ICON_ANGULAR_CONSOLE_PREFIX, DynamicLoadingTimeoutError, HttpModuleNotImport, IconDirective, IconModule, IconNotFoundError, IconService, NameSpaceIsNotSpecifyError, SVGTagNotFoundError, UrlNotSafeError, alreadyHasAThemeSuffix, cloneSVG, error, getIconDefinitionFromAbbr, getNameAndNamespace, getSecondaryColor, hasNamespace, isIconDefinition, manifest, mapAbbrToTheme, replaceFillColor, warn, withSuffix, withSuffixAndColor };\n"]},"metadata":{},"sourceType":"module"}